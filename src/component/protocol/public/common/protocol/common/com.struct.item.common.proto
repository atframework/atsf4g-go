syntax = "proto3";

option optimize_for = SPEED;
// option optimize_for = LITE_RUNTIME;
// option optimize_for = CODE_SIZE;
// --cpp_out=lite:,--cpp_out=
option cc_enable_arenas = true;

option go_package = "github.com/atframework/atsf4g-go/component-protocol-public/common/protocol/common";

import "protocol/extension/v3/xresloader.proto";

package proy;

enum EnItemType {
  EN_ITEM_TYPE_INVALID = 0;
  EN_ITEM_TYPE_MONEY = 1 [(org.xresloader.enum_alias) = "money"];
  EN_ITEM_TYPE_PROP = 2 [(org.xresloader.enum_alias) = "prop"];
  EN_ITEM_TYPE_PACKAGE = 5 [(org.xresloader.enum_alias) = "package"];
  EN_ITEM_TYPE_CHARACTER = 8 [(org.xresloader.enum_alias) = "character"];
  EN_ITEM_TYPE_CHARACTER_PROP = 9 [(org.xresloader.enum_alias) = "character_prop"];
}

enum EnItemTypeRange {
  option allow_alias = true;

  EN_ITEM_TYPE_RANGE_INVALID = 0;
  EN_ITEM_TYPE_RANGE_VIRTUAL_ITEM_BEGIN = 1000;
  EN_ITEM_TYPE_RANGE_VIRTUAL_ITEM_END = 10000;

  EN_ITEM_TYPE_RANGE_PROP_BEGIN = 600000;
  EN_ITEM_TYPE_RANGE_PROP_END = 700000;
  EN_ITEM_TYPE_RANGE_MISC_BEGIN = 800000;
  EN_ITEM_TYPE_RANGE_MISC_END = 900000;
  EN_ITEM_TYPE_RANGE_CHARACTER_BEGIN = 2000000;
  EN_ITEM_TYPE_RANGE_CHARACTER_END = 2100000;
  EN_ITEM_TYPE_RANGE_CHARACTER_PROP_BEGIN = 900000;
  EN_ITEM_TYPE_RANGE_CHARACTER_PROP_END = 1000000;
}

enum EnItemMoneyType {
  EN_ITEM_MONEY_TYPE_INVALID = 0;
  EN_ITEM_MONEY_TYPE_COIN = 1001;
  EN_ITEM_MONEY_TYPE_CASH = 1002;
}

enum EnItemVirtualItemType {
  EN_ITEM_VIRTUAL_ITEM_TYPE_INVALID = 0;
  EN_ITEM_VIRTUAL_ITEM_TYPE_USER_EXP = 1101;
}

message DItemBasic {
  int32 type_id = 1 [(org.xresloader.validator) = "ExcelItem_item_id"];
  int64 count = 2;
  int64 guid = 3;  // 唯一ID(如果有)
}

// 道具数据实例
message DItemInstance {
  // 道具基础信息
  DItemBasic item_basic = 1;

  int64 expire_timepoint = 11;  // 超时时间（如果有）
}

// 道具数据(增量,用于奖励等)
message DItemOffset {
  int32 type_id = 1 [(org.xresloader.validator) = "ExcelItem_item_id"];
  int64 count = 2;

  // 有效期，0表示永久生效
  int64 expire_offset = 11 [(org.xresloader.field_allow_missing_in_plain_mode) = true];
}

// 道具数据(增量,限定Scope,用于奖励等)
message DItemScopeOffset {
  DItemOffset item_offset = 1 [(org.xresloader.validator) = "ExcelItem_item_id"];
}

message DItemUseAction {
  oneof action_type {
    int64 add_role_exp = 1 [(org.xresloader.field_unique_tag) = "item"];
  }
}

syntax = "proto3";

option optimize_for = SPEED;
// option optimize_for = LITE_RUNTIME;
// option optimize_for = CODE_SIZE;
// --cpp_out=lite:,--cpp_out=
option cc_enable_arenas = true;

option go_package = "github.com/atframework/atsf4g-go/component-protocol-public/common/protocol/common";

import "protocol/extension/v3/xresloader.proto";

package proy;

enum EnItemType {
  EN_ITEM_TYPE_INVALID = 0;
  EN_ITEM_TYPE_MONEY = 1 [ (org.xresloader.enum_alias) = "money" ];
  EN_ITEM_TYPE_PROP = 2 [ (org.xresloader.enum_alias) = "prop" ];
  EN_ITEM_TYPE_BUILDING = 3 [ (org.xresloader.enum_alias) = "building" ];
  EN_ITEM_TYPE_DECORATION = 4 [ (org.xresloader.enum_alias) = "decoration" ];
  EN_ITEM_TYPE_PACKAGE = 5 [ (org.xresloader.enum_alias) = "package" ];
  EN_ITEM_TYPE_SKIN = 6 [ (org.xresloader.enum_alias) = "skin" ];
  EN_ITEM_TYPE_EQUIPMENT = 7 [ (org.xresloader.enum_alias) = "equipment" ];
  EN_ITEM_TYPE_CHARACTER = 8 [ (org.xresloader.enum_alias) = "character" ];
  EN_ITEM_TYPE_CHARACTER_PROP = 9
      [ (org.xresloader.enum_alias) = "character_prop" ];
  EN_ITEM_TYPE_MENU = 10 [ (org.xresloader.enum_alias) = "menu" ];
}

enum EnItemTypeRange {
  option allow_alias = true;

  EN_ITEM_TYPE_RANGE_INVALID = 0;
  EN_ITEM_TYPE_RANGE_VIRTUAL_ITEM_BEGIN = 1000;
  EN_ITEM_TYPE_RANGE_VIRTUAL_ITEM_END = 10000;

  EN_ITEM_TYPE_RANGE_PROP_BEGIN = 600000;
  EN_ITEM_TYPE_RANGE_PROP_END = 700000;
  EN_ITEM_TYPE_RANGE_MISC_BEGIN = 800000;
  EN_ITEM_TYPE_RANGE_MISC_END = 900000;
  EN_ITEM_TYPE_RANGE_BUILDING_FURNITURE_BEGIN = 700000;
  EN_ITEM_TYPE_RANGE_BUILDING_FURNITURE_END = 800000;
  EN_ITEM_TYPE_RANGE_BUILDING_KITCHENWARE_BEGIN = 500000;
  EN_ITEM_TYPE_RANGE_BUILDING_KITCHENWARE_END = 600000;
  EN_ITEM_TYPE_RANGE_CHARACTER_BEGIN = 2000000;
  EN_ITEM_TYPE_RANGE_CHARACTER_END = 2100000;
  EN_ITEM_TYPE_RANGE_GUEST_BEGIN = 2100000;
  EN_ITEM_TYPE_RANGE_GUEST_END = 2200000;
  EN_ITEM_TYPE_RANGE_CHARACTER_PROP_BEGIN = 900000;
  EN_ITEM_TYPE_RANGE_CHARACTER_PROP_END = 1000000;
  EN_ITEM_TYPE_RANGE_MENU_BEGIN = 300000;
  EN_ITEM_TYPE_RANGE_MENU_END = 310000;
}

enum EnItemMoneyType {
  EN_ITEM_MONEY_TYPE_INVALID = 0;
  EN_ITEM_MONEY_TYPE_COIN = 1001;
  EN_ITEM_MONEY_TYPE_CASH = 1002;
}

message DItemBoxPosition {
  int32 x = 1;
  int32 y = 2;
}

message DItemSlotPosition { int32 slot_idx = 1; }

message DItemPosition {
  // Container guid
  int64 container_guid = 1;

  oneof position_type {
    // 仓库
    DItemBoxPosition inventory = 11;
    // 角色背包
    DItemBoxPosition role_backpack = 12;
    // 角色装备位置
    DItemSlotPosition role_equipment = 13;
  }
}

message DItemBasic {
  int32 type_id = 1 [ (org.xresloader.validator) = "ExcelItem_item_id" ];
  int64 count = 2;
  int64 guid = 3; // 唯一ID(如果有)
  DItemPosition position = 4;
}

// 道具数据实例
message DItemInstance {
  // 道具基础信息
  DItemBasic item_basic = 1;

  int64 expire_timepoint = 11; // 超时时间（如果有）
}

// 道具数据(增量,用于奖励等)
message DItemOffset {
  int32 type_id = 1 [ (org.xresloader.validator) = "ExcelItem_item_id" ];
  int64 count = 2;

  // 有效期，0表示永久生效
  int64 expire_offset = 11
      [ (org.xresloader.field_allow_missing_in_plain_mode) = true ];
}

// 道具数据(增量,限定Scope,用于奖励等)
message DItemScopeOffset {
  DItemOffset item_offset = 1
      [ (org.xresloader.validator) = "ExcelItem_item_id" ];
}

message DItemUseAction {
  oneof action_type {
    int64 add_role_exp = 1 [ (org.xresloader.field_unique_tag) = "item" ];
  }
}
